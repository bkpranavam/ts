using DocumentFormat.OpenXml;
using DocumentFormat.OpenXml.Packaging;
using DocumentFormat.OpenXml.Spreadsheet;

public static MemoryStream CreateExcelFile(IQueryable data)
{
    var stream = new MemoryStream();
    var workbookPart = SpreadsheetDocument.Create(stream, SpreadsheetDocumentType.Workbook);
    var workbook = new Workbook();
    var sheet = new Sheet { SheetId = 1, Name = "Sheet1", Id = workbookPart.GetIdOfPart(workbookPart.AddNewPart<WorksheetPart>()) };
    var worksheetPart = (WorksheetPart)workbookPart.GetPartById(sheet.Id);
    var worksheet = new Worksheet();
    var sheetData = new SheetData();
    var properties = data.First().GetType().GetProperties();

    // Add header row
    var headerRow = new Row();
    foreach (var property in properties)
    {
        headerRow.AppendChild(CreateCell(property.Name));
    }
    sheetData.AppendChild(headerRow);

    // Add data rows
    foreach (var item in data)
    {
        var dataRow = new Row();
        foreach (var property in properties)
        {
            dataRow.AppendChild(CreateCell(property.GetValue(item)?.ToString()));
        }
        sheetData.AppendChild(dataRow);
    }

    worksheet.AppendChild(sheetData);
    worksheetPart.Worksheet = worksheet;
    workbook.AppendChild(sheet);
    workbookPart.Workbook = workbook;
    workbookPart.Close();

    stream.Seek(0, SeekOrigin.Begin);
    return stream;
}

private static Cell CreateCell(string text)
{
    var cell = new Cell { DataType = CellValues.String };
    cell.AppendChild(new CellValue(text));
    return cell;
}




private void DownloadExcelFile()
{
    var data = GetData();
    var excelFile = CreateExcelFile(data);

    var provider = new FileExtensionContentTypeProvider();
    if (!provider.TryGetContentType("sample.xlsx", out var contentType))
    {
        contentType = "application/octet-stream";
    }

    var fileName = "sample.xlsx";
    var contentDisposition = "attachment; filename=" + fileName;
    HttpContext.Response.ContentType = contentType;
    HttpContext.Response.Headers.Add("Content-Disposition", contentDisposition);
    HttpContext.Response.Body.Write(excelFile.ToArray(), 0, (int)excelFile.Length);
}
public MemoryStream CreateExcelFile(IQueryable data, HttpContext httpContext)
{
    var stream = new MemoryStream();
    var workbookPart = SpreadsheetDocument.Create(stream, SpreadsheetDocumentType.Workbook);
    //... rest of the code
}

public void DownloadExcelFile(HttpContext httpContext)
{
    var data = GetData();
    var excelFile = CreateExcelFile(data, httpContext);

    var provider = new FileExtensionContentTypeProvider();
    if (!provider.TryGetContentType("sample.xlsx", out var contentType))
    {
        contentType = "application/octet-stream";
    }

    var fileName = "sample.xlsx";
    var contentDisposition = "attachment; filename=" + fileName;
    httpContext.Response.ContentType = contentType;
    httpContext.Response.Headers.Add("Content-Disposition", contentDisposition);
    httpContext.Response.Body.Write(excelFile.ToArray(), 0, (int)excelFile.Length);
}
